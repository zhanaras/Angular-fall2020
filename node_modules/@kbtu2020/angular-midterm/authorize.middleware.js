"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAuthorized = exports.authorize = void 0;
const axios_1 = require("axios");
function toBase64(str) {
    return Buffer.from(str).toString("base64");
}
function fromBase64(str) {
    return Buffer.from(str, "base64").toString("ascii");
}
async function authorize(username, password) {
    try {
        const response = await axios_1.default.get(`http://localhost:3000/users?username=${username}&password=${password}`);
        const token = `Basic ${toBase64(`${username}:${password}`)}`;
        return token;
    }
    catch (ex) {
        return false;
    }
}
exports.authorize = authorize;
async function isAuthorized(req) {
    const authHeader = req.headers.authorization;
    console.log("auth start");
    console.log("header:", authHeader);
    if (!authHeader || authHeader == "") {
        return false;
    }
    const parts = authHeader.split(" ");
    if (!parts || parts.length != 2 || parts[0] != "Basic") {
        return false;
    }
    const credentials = fromBase64(parts[1]).split(":");
    console.log("credentials:", ...credentials);
    if (!credentials || credentials.length != 2) {
        return false;
    }
    const result = await authorize(...credentials);
    console.log("auth end. result=", result);
    return result != false;
}
exports.isAuthorized = isAuthorized;
